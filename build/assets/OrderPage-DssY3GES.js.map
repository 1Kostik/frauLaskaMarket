{"version":3,"file":"OrderPage-DssY3GES.js","sources":["../../src/pages/OrderPage/OrderPage.styled.ts","../../src/utils/orderItemsConverter.ts","../../src/components/NewPostSelect/NewPostSelect.styled.ts","../../src/components/NewPostSelect/NewPostSelect.tsx","../../src/components/CartForm/CartForm.tsx","../../src/pages/OrderPage/OrderPage.tsx"],"sourcesContent":["import { css } from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { onDesktop, onTablet } from \"@styles/mixins\";\r\n\r\nexport const sectionCart = css`\r\n  padding: 24px 0px;\r\n  width: 100%;\r\n  background: var(--bg-black);\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 16px;\r\n  ${onTablet(css`\r\n    width: 312px;\r\n  `)};\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  width: 100%;\r\n  color: var(--text-light-grey);\r\n  font-family: Fixel;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  line-height: 120%;\r\n  letter-spacing: 0.36px;\r\n\r\n  ${onDesktop(css`\r\n    font-size: 24px;\r\n    letter-spacing: 0.48px;\r\n  `)}\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  ${onDesktop(css`\r\n    flex-direction: unset;\r\n    gap: 20px;\r\n  `)};\r\n`;\r\n\r\nexport const MainInfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n  ${onDesktop(css`\r\n    gap: 40px;\r\n  `)};\r\n`;\r\n\r\nexport const ItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  ${onTablet(css`\r\n    flex-direction: unset;\r\n    gap: 16px;\r\n  `)};\r\n  ${onDesktop(css`\r\n    width: 844px;\r\n    gap: 20px;\r\n  `)};\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  ${onDesktop(css`\r\n    gap: 20px;\r\n  `)};\r\n`;\r\n","import { IAddedToCartProduct } from \"Interfaces/IAddedToCartProduct\";\r\nimport { fullPrice } from \"./fullPrice\";\r\n\r\nexport const orderItemsConverter = (addedItems: IAddedToCartProduct[]) => {\r\n  return addedItems.map((item) => {\r\n    const { color, count, product_id, size, discount, price } = item;\r\n\r\n    return {\r\n      full_price: discount ? fullPrice(Number(price), discount) : price,\r\n      discount: discount ? discount : null,\r\n      color: color ? color : null,\r\n      count,\r\n      product_id,\r\n      size: size ? size : null,\r\n    };\r\n  });\r\n};\r\n","import { css } from \"@emotion/react\";\r\n\r\nexport const selectContainer = css`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 24px;\r\n`;\r\n\r\nexport const inputWrapper = css`\r\n  position: relative;\r\n\r\n  & input {\r\n    width: 100%;\r\n  }\r\n\r\n  & div {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    pointer-events: none;\r\n    transform: translateY(-50%);\r\n\r\n    width: 100%;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    padding: 0 12px;\r\n\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    letter-spacing: 0.1px;\r\n  }\r\n`;\r\n\r\nexport const listStyle = css`\r\n  position: absolute;\r\n  top: 54px;\r\n  z-index: 2;\r\n  width: 100%;\r\n  max-height: 150px;\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 12px;\r\n  background-color: var(--bg-black);\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #6c6767;\r\n    border-radius: 12px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background-color: #b7b7b7;\r\n    border-radius: 12px;\r\n  }\r\n\r\n  & p {\r\n    cursor: pointer;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    line-height: 20px;\r\n    letter-spacing: 0.1px;\r\n    &:hover {\r\n      background-color: var(--bg-tranparent);\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { FormikProps } from \"formik\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport {\r\n  inputWrapper,\r\n  listStyle,\r\n  selectContainer,\r\n} from \"./NewPostSelect.styled\";\r\n\r\nimport { getNPCities, getWarehouses } from \"@services/servicesApi\";\r\n\r\nimport { IInitialCartFormValue } from \"Interfaces/IInitialCartFormValue\";\r\n\r\nimport { errorBorder, inputStyle } from \"@components/CartForm/CartForm.styled\";\r\nimport { inputLabel } from \"@components/AdminForm/AdminForm.styled\";\r\n\r\ninterface INewPostSelectProps {\r\n  formik: FormikProps<IInitialCartFormValue>;\r\n}\r\n\r\ninterface ICity {\r\n  Present: string;\r\n  DeliveryCity: string;\r\n}\r\n\r\ninterface IWarehouse {\r\n  Description: string;\r\n}\r\n\r\nconst NewPostSelect: React.FC<INewPostSelectProps> = ({ formik }) => {\r\n  const { setFieldValue, setFieldTouched, touched, errors, values } = formik;\r\n\r\n  const [isShowSelectCities, setIsShowSelectCities] = useState(false);\r\n  const [selectedCity, setSelectedCity] = useState<null | ICity>(null);\r\n  const [searchCity, setSearchCity] = useState(\"\");\r\n  const [cities, setCities] = useState<ICity[] | null>(null);\r\n  const [highlightedCityIndex, setHighlightedCityIndex] = useState(0);\r\n\r\n  const [isShowSelectWarehouse, setIsShowSelectWarehouse] = useState(false);\r\n  const [selectedWarehouse, setSelectedWarehouse] = useState<string>(\"\");\r\n  const [searchWarehouse, setSearchWarehouse] = useState(\"\");\r\n  const [warehouses, setWarehouses] = useState<IWarehouse[] | null>(null);\r\n  const [highlightedWarehouseIndex, setHighlightedWarehouseIndex] = useState(0);\r\n\r\n  const cityListRef = useRef<HTMLDivElement>(null);\r\n  const warehouseListRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleSearchValue = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    type: string\r\n  ) => {\r\n    const value = e.target.value;\r\n    type === \"city\"\r\n      ? setSearchCity(value.trim())\r\n      : setSearchWarehouse(value.trim());\r\n\r\n    if (type === \"city\") setHighlightedCityIndex(0);\r\n    else setHighlightedWarehouseIndex(0);\r\n  };\r\n\r\n  const onSelectCity = (value: ICity) => {\r\n    setSelectedCity(value);\r\n    setSearchCity(\"\");\r\n    setIsShowSelectCities(false);\r\n    setCities(null);\r\n    setHighlightedCityIndex(0);\r\n  };\r\n\r\n  const onSelectWarehouse = (value: string) => {\r\n    setSelectedWarehouse(value);\r\n    setSearchWarehouse(\"\");\r\n    setIsShowSelectWarehouse(false);\r\n    setHighlightedWarehouseIndex(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isCyrillicCityName = /^[а-яА-ЯёЁіІїЇ\\s'’]+$/u.test(searchCity);\r\n    if (searchCity.length > 1 && isCyrillicCityName) {\r\n      (async () => {\r\n        const cities = await getNPCities(searchCity);\r\n        setCities(cities);\r\n      })();\r\n    }\r\n    if (searchCity.length === 0) {\r\n      setCities(null);\r\n    }\r\n  }, [searchCity]);\r\n\r\n  useEffect(() => {\r\n    const cityRef = selectedCity?.DeliveryCity;\r\n    cityRef &&\r\n      (async () => {\r\n        const warehouses = await getWarehouses(cityRef);\r\n        setWarehouses(warehouses);\r\n      })();\r\n    setSelectedWarehouse(\"\");\r\n  }, [selectedCity]);\r\n\r\n  useEffect(() => {\r\n    const handleClick = (e: MouseEvent) => {\r\n      const element = e.target as HTMLElement;\r\n      if (!element.closest(\"[id=city]\") && !element.closest(\"[id=warehouse]\")) {\r\n        setIsShowSelectCities(false);\r\n        setCities(null);\r\n        setSearchCity(\"\");\r\n\r\n        setIsShowSelectWarehouse(false);\r\n        setSearchWarehouse(\"\");\r\n      } else if (element.closest(\"[id=city]\")) {\r\n        setIsShowSelectCities(true);\r\n        setIsShowSelectWarehouse(false);\r\n      }\r\n      if (element.closest(\"[id=warehouse]\")) {\r\n        setIsShowSelectWarehouse(true);\r\n        setIsShowSelectCities(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", handleClick);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFieldValue(\"delivery_city\", selectedCity?.Present || \"\");\r\n    setFieldValue(\"delivery_destination\", selectedWarehouse);\r\n  }, [selectedWarehouse, selectedCity, setFieldValue]);\r\n\r\n  const filteredWarehouses: IWarehouse[] =\r\n    warehouses?.filter((warehouse: IWarehouse) =>\r\n      warehouse.Description.includes(searchWarehouse)\r\n    ) || [];\r\n\r\n  const handleKeyDown = (\r\n    e: React.KeyboardEvent<HTMLInputElement>,\r\n    type: string\r\n  ) => {\r\n    if (type === \"city\") {\r\n      if (e.key === \"ArrowDown\" && cities) {\r\n        setHighlightedCityIndex((prev) =>\r\n          prev < cities.length - 1 ? prev + 1 : prev\r\n        );\r\n      } else if (e.key === \"ArrowUp\") {\r\n        setHighlightedCityIndex((prev) => (prev > 0 ? prev - 1 : prev));\r\n      } else if (e.key === \"Enter\") {\r\n        e.preventDefault();\r\n        if (highlightedCityIndex >= 0 && cities) {\r\n          onSelectCity(cities[highlightedCityIndex]);\r\n        }\r\n      }\r\n    } else if (type === \"warehouse\") {\r\n      if (e.key === \"ArrowDown\" && filteredWarehouses) {\r\n        setHighlightedWarehouseIndex((prev) =>\r\n          prev < filteredWarehouses.length - 1 ? prev + 1 : prev\r\n        );\r\n      } else if (e.key === \"ArrowUp\") {\r\n        setHighlightedWarehouseIndex((prev) => (prev > 0 ? prev - 1 : prev));\r\n      } else if (e.key === \"Enter\") {\r\n        e.preventDefault();\r\n        if (highlightedWarehouseIndex >= 0 && filteredWarehouses) {\r\n          onSelectWarehouse(\r\n            filteredWarehouses[highlightedWarehouseIndex].Description\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cityListRef.current && highlightedCityIndex >= 0) {\r\n      const highlightedElement = cityListRef.current.children[\r\n        highlightedCityIndex\r\n      ] as HTMLDivElement;\r\n      if (highlightedElement) {\r\n        highlightedElement.scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: \"nearest\",\r\n        });\r\n      }\r\n    }\r\n  }, [highlightedCityIndex]);\r\n\r\n  useEffect(() => {\r\n    if (warehouseListRef.current && highlightedWarehouseIndex >= 0) {\r\n      const highlightedElement = warehouseListRef.current.children[\r\n        highlightedWarehouseIndex\r\n      ] as HTMLDivElement;\r\n      if (highlightedElement) {\r\n        highlightedElement.scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: \"nearest\",\r\n        });\r\n      }\r\n    }\r\n  }, [highlightedWarehouseIndex]);\r\n\r\n  return (\r\n    <>\r\n      <div css={selectContainer}>\r\n        <div css={inputWrapper}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"city\"\r\n            id=\"city\"\r\n            placeholder={selectedCity ? \"\" : \"Місто\"}\r\n            onChange={(e) => handleSearchValue(e, \"city\")}\r\n            value={searchCity}\r\n            autoComplete=\"none\"\r\n            onFocus={() => setFieldTouched(\"delivery_city\", false, false)}\r\n            onKeyDown={(e) => handleKeyDown(e, \"city\")}\r\n            css={[\r\n              inputStyle,\r\n              errorBorder(!!(errors.delivery_city && touched.delivery_city)),\r\n            ]}\r\n          />\r\n          <p css={inputLabel(!!searchCity || !!values.delivery_city)}>Місто</p>\r\n\r\n          {!searchCity && <div>{selectedCity?.Present}</div>}\r\n        </div>\r\n        {isShowSelectCities && cities && cities.length > 0 && (\r\n          <div css={listStyle} ref={cityListRef}>\r\n            {cities.map((city, index) => (\r\n              <p\r\n                key={nanoid()}\r\n                onClick={() => {\r\n                  onSelectCity(city);\r\n                }}\r\n                style={{\r\n                  backgroundColor:\r\n                    highlightedCityIndex === index ? \"#a6a4a450\" : \"none\",\r\n                }}\r\n              >\r\n                {city.Present}\r\n              </p>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div css={selectContainer}>\r\n        <div css={inputWrapper}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"warehouse\"\r\n            id=\"warehouse\"\r\n            placeholder={selectedWarehouse ? \"\" : \"Відділення\"}\r\n            onChange={(e) => handleSearchValue(e, \"warehouse\")}\r\n            value={searchWarehouse}\r\n            autoComplete=\"none\"\r\n            onFocus={() =>\r\n              setFieldTouched(\"delivery_destination\", false, false)\r\n            }\r\n            onKeyDown={(e) => handleKeyDown(e, \"warehouse\")}\r\n            css={[\r\n              inputStyle,\r\n              errorBorder(\r\n                !!(errors.delivery_destination && touched.delivery_destination)\r\n              ),\r\n            ]}\r\n          />\r\n          <p\r\n            css={inputLabel(!!searchWarehouse || !!values.delivery_destination)}\r\n          >\r\n            Відділення\r\n          </p>\r\n\r\n          {!searchWarehouse && <div>{selectedWarehouse}</div>}\r\n        </div>\r\n        {isShowSelectWarehouse && filteredWarehouses.length > 0 && (\r\n          <div css={listStyle} ref={warehouseListRef}>\r\n            {filteredWarehouses.map(({ Description }, index) => (\r\n              <p\r\n                key={nanoid()}\r\n                onClick={() => onSelectWarehouse(Description)}\r\n                style={{\r\n                  backgroundColor:\r\n                    highlightedWarehouseIndex === index ? \"#a6a4a450\" : \"none\",\r\n                }}\r\n              >\r\n                {Description}\r\n              </p>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {isShowSelectWarehouse && filteredWarehouses.length === 0 && (\r\n          <p>Немає відділень</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPostSelect;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage, FieldProps } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {\r\n  deliveryTypes,\r\n  errorBorder,\r\n  errorStyle,\r\n  formWrapper,\r\n  groupWrapper,\r\n  inputStyle,\r\n  NPDeliveryWrapper,\r\n  paymentMethods,\r\n  recipientStyle,\r\n} from \"./CartForm.styled\";\r\n\r\nimport { makePayment } from \"@services/servicesApi\";\r\nimport { makeOrder } from \"@services/servicesApi\";\r\n\r\nimport { replaceNullsWithEmptyStrings } from \"@utils/replaceNullsWithEmptyStrings \";\r\nimport { orderItemsConverter } from \"@utils/orderItemsConverter\";\r\n\r\nimport { inputLabel } from \"@components/AdminForm/AdminForm.styled\";\r\nimport NewPostSelect from \"@components/NewPostSelect\";\r\n\r\nimport { IAddedToCartProduct } from \"Interfaces/IAddedToCartProduct\";\r\nimport { IInitialCartFormValue } from \"Interfaces/IInitialCartFormValue\";\r\n\r\nconst validationSchema = (isOtherRecipient: boolean) =>\r\n  Yup.object({\r\n    name: Yup.string()\r\n      .max(15, \"Має бути 15 символів або менше\")\r\n      .required(\"Обов'язкове\"),\r\n    last_name: Yup.string()\r\n      .max(15, \"Має бути 15 символів або менше\")\r\n      .required(\"Обов'язкове\"),\r\n    phone: Yup.string()\r\n      .matches(/^\\+380\\d{9}$/, \"Невірний номер телефону\")\r\n      .required(\"Обов'язковий\"),\r\n    email: Yup.string()\r\n      .email(\"Невірна адреса електронної пошти\")\r\n      .required(\"Обов'язковий\"),\r\n\r\n    delivery_type: Yup.string().oneOf([\"Нова пошта\", \"Самовивіз\"]),\r\n    delivery_city: Yup.string().test(\r\n      \"is-postPickup\",\r\n      \"Поля доставки обов'язкові\",\r\n      function (value) {\r\n        const { delivery_type } = this.parent;\r\n        if (\r\n          delivery_type === \"Нова пошта\" &&\r\n          (value === null || value === undefined)\r\n        ) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n    ),\r\n    delivery_destination: Yup.string().test(\r\n      \"is-postPickup\",\r\n      \"Поля доставки обов'язкові\",\r\n      function (value) {\r\n        const { delivery_type } = this.parent;\r\n        if (\r\n          delivery_type === \"Нова пошта\" &&\r\n          (value === null || value === undefined)\r\n        ) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n    ),\r\n\r\n    recipient_name: Yup.string()\r\n      .max(15, \"Має бути 15 символів або менше\")\r\n      .test(\"isOtherRecipient-recipient_name\", \"Обов'язкове\", function (value) {\r\n        if (isOtherRecipient && (!value || value.trim() === \"\")) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }),\r\n    recipient_last_name: Yup.string()\r\n      .max(15, \"Має бути 15 символів або менше\")\r\n      .test(\r\n        \"isOtherRecipient-recipient_last_name\",\r\n        \"Обов'язкове\",\r\n        function (value) {\r\n          if (isOtherRecipient && (!value || value.trim() === \"\")) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n      ),\r\n    recipient_phone: Yup.string()\r\n      .matches(/^\\+380\\d{9}$/, \"Невірний номер телефону\")\r\n      .test(\r\n        \"isOtherRecipient-recipient_phone\",\r\n        \"Обов'язковий\",\r\n        function (value) {\r\n          if (isOtherRecipient && (!value || value.trim() === \"\")) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n      ),\r\n\r\n    payment_method: Yup.string().oneOf([\"LiqPay\", \"Накладний платіж\"]),\r\n  });\r\n\r\nconst initialValue: IInitialCartFormValue = {\r\n  name: \"\",\r\n  last_name: \"\",\r\n  phone: \"\",\r\n  email: \"\",\r\n  delivery_type: \"Нова пошта\",\r\n  delivery_city: \"\",\r\n  delivery_destination: \"\",\r\n  recipient_name: \"\",\r\n  recipient_last_name: \"\",\r\n  recipient_phone: \"\",\r\n  payment_method: \"LiqPay\",\r\n};\r\n\r\ninterface ICartFormProps {\r\n  addedItems: IAddedToCartProduct[];\r\n  total_amount: number;\r\n  callMeBack: boolean;\r\n}\r\n\r\nconst CartForm: React.FC<ICartFormProps> = ({ addedItems, callMeBack }) => {\r\n  const [isOtherRecipient, setIsOtherRecipient] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleRecipient = () => {\r\n    setIsOtherRecipient((prev) => !prev);\r\n  };\r\n\r\n  const preventNumberInput = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (/\\d/.test(e.key)) {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  const onOrderSubmit = async (values: IInitialCartFormValue) => {\r\n    const newOrder = {\r\n      ...replaceNullsWithEmptyStrings(values),\r\n      order_items: orderItemsConverter(addedItems),\r\n      call_me_back: callMeBack,\r\n    };\r\n\r\n    try {\r\n      if (values.payment_method === \"LiqPay\") {\r\n        const resp = await makeOrder(newOrder);\r\n        await makePayment(resp);\r\n        navigate(\"/\");\r\n      } else {\r\n        await makeOrder(newOrder);\r\n        navigate(`/ordered?email=${values.email}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error while making order:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValue}\r\n      validationSchema={validationSchema(isOtherRecipient)}\r\n      onSubmit={(values) => onOrderSubmit(values)}\r\n      validateOnBlur={false}\r\n    >\r\n      {(formik) => {\r\n        const { setFieldValue, setFieldTouched, touched, errors, values } =\r\n          formik;\r\n        return (\r\n          <Form css={formWrapper} id=\"orderForm\">\r\n            <div\r\n              role=\"group\"\r\n              aria-labelledby=\"contactDetailsLabel\"\r\n              css={groupWrapper}\r\n            >\r\n              <h3>Ваші контактні дані</h3>\r\n              <div>\r\n                <label htmlFor=\"name\">\r\n                  <Field\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Ім’я\"\r\n                    css={[\r\n                      inputStyle,\r\n                      errorBorder(!!(errors.name && touched.name)),\r\n                    ]}\r\n                    onFocus={() => setFieldTouched(\"name\", false, false)}\r\n                    onKeyDown={preventNumberInput}\r\n                  />\r\n                  <p css={inputLabel(!!values.name)}>Ім’я</p>\r\n                  <ErrorMessage name=\"name\">\r\n                    {(msg) => <div css={errorStyle}>{msg}</div>}\r\n                  </ErrorMessage>\r\n                </label>\r\n\r\n                <label htmlFor=\"last_name\">\r\n                  <Field\r\n                    name=\"last_name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Прізвище\"\r\n                    css={[\r\n                      inputStyle,\r\n                      errorBorder(!!(errors.last_name && touched.last_name)),\r\n                    ]}\r\n                    onFocus={() => setFieldTouched(\"last_name\", false, false)}\r\n                    onKeyDown={preventNumberInput}\r\n                  />\r\n                  <p css={inputLabel(!!values.last_name)}>Прізвище</p>\r\n                  <ErrorMessage name=\"last_name\">\r\n                    {(msg) => <div css={errorStyle}>{msg}</div>}\r\n                  </ErrorMessage>\r\n                </label>\r\n\r\n                <label htmlFor=\"phone\">\r\n                  <Field name=\"phone\">\r\n                    {(props: FieldProps<string>) => (\r\n                      <input\r\n                        {...props.field}\r\n                        type=\"tel\"\r\n                        placeholder=\"Номер телефону\"\r\n                        onFocus={() => {\r\n                          setFieldTouched(\"phone\", false, false);\r\n                          if (!props.field.value) {\r\n                            setFieldValue(\"phone\", \"+380\");\r\n                          }\r\n                        }}\r\n                        onChange={(e) => {\r\n                          const value = e.target.value;\r\n                          if (value.match(/^\\+380\\d{0,9}$/)) {\r\n                            setFieldValue(\"phone\", value);\r\n                          }\r\n                        }}\r\n                        onBlur={() => {\r\n                          if (props.field.value === \"+380\") {\r\n                            setFieldValue(\"phone\", \"\");\r\n                          }\r\n                        }}\r\n                        css={[\r\n                          inputStyle,\r\n                          errorBorder(!!(errors.phone && touched.phone)),\r\n                        ]}\r\n                      />\r\n                    )}\r\n                  </Field>\r\n                  <p css={inputLabel(!!values.phone)}>Номер телефону</p>\r\n                  <ErrorMessage name=\"phone\">\r\n                    {(msg) => <div css={errorStyle}>{msg}</div>}\r\n                  </ErrorMessage>\r\n                </label>\r\n\r\n                <label>\r\n                  <Field\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"E-mail\"\r\n                    css={[\r\n                      inputStyle,\r\n                      errorBorder(!!(errors.email && touched.email)),\r\n                    ]}\r\n                    onFocus={() => setFieldTouched(\"email\", false, false)}\r\n                  />\r\n                  <p css={inputLabel(!!values.email)}>E-mail</p>\r\n                  <ErrorMessage name=\"email\">\r\n                    {(msg) => <div css={errorStyle}>{msg}</div>}\r\n                  </ErrorMessage>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              role=\"group\"\r\n              aria-labelledby=\"deliveryLabel\"\r\n              css={groupWrapper}\r\n            >\r\n              <h3>Доставка</h3>\r\n              <div>\r\n                <div css={deliveryTypes}>\r\n                  <Field\r\n                    type=\"radio\"\r\n                    name=\"delivery_type\"\r\n                    value=\"Нова пошта\"\r\n                    id=\"postPickup\"\r\n                  />\r\n                  <label htmlFor=\"postPickup\">Нова пошта</label>\r\n                  <Field\r\n                    type=\"radio\"\r\n                    name=\"delivery_type\"\r\n                    value=\"Самовивіз\"\r\n                    id=\"selfPickup\"\r\n                  />\r\n                  <label htmlFor=\"selfPickup\">Самовивіз</label>\r\n                </div>\r\n                {values.delivery_type === \"Нова пошта\" && (\r\n                  <div css={NPDeliveryWrapper}>\r\n                    <NewPostSelect formik={formik} />\r\n                    <ErrorMessage name=\"delivery_destination\">\r\n                      {(msg) => <div css={errorStyle}>{msg}</div>}\r\n                    </ErrorMessage>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div css={[groupWrapper, recipientStyle]}>\r\n              <h3>Отримувач інша особа</h3>\r\n              <input type=\"checkbox\" id=\"recipient\" className=\"hiddenInput\" />\r\n              <label htmlFor=\"recipient\" onClick={handleRecipient}>\r\n                Отримувач буде інша особа\r\n              </label>\r\n            </div>\r\n            {isOtherRecipient && (\r\n              <div\r\n                role=\"group\"\r\n                aria-labelledby=\"recipientLabel\"\r\n                css={groupWrapper}\r\n              >\r\n                <h3>Контактні дані отримувача</h3>\r\n                <div>\r\n                  <label htmlFor=\"recipient_name\">\r\n                    <Field\r\n                      name=\"recipient_name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Ім’я\"\r\n                      css={[\r\n                        inputStyle,\r\n                        errorBorder(\r\n                          !!(errors.recipient_name && touched.recipient_name)\r\n                        ),\r\n                      ]}\r\n                      onFocus={() =>\r\n                        setFieldTouched(\"recipient_name\", false, false)\r\n                      }\r\n                      onKeyDown={preventNumberInput}\r\n                    />\r\n                    <p css={inputLabel(!!values.recipient_name)}>Ім’я</p>\r\n                    <ErrorMessage name=\"recipient_name\">\r\n                      {(msg) => <div css={errorStyle}>{msg}</div>}\r\n                    </ErrorMessage>\r\n                  </label>\r\n\r\n                  <label htmlFor=\"recipient_last_name\">\r\n                    <Field\r\n                      name=\"recipient_last_name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Прізвище\"\r\n                      css={[\r\n                        inputStyle,\r\n                        errorBorder(\r\n                          !!(\r\n                            errors.recipient_last_name &&\r\n                            touched.recipient_last_name\r\n                          )\r\n                        ),\r\n                      ]}\r\n                      onFocus={() =>\r\n                        setFieldTouched(\"recipient_last_name\", false, false)\r\n                      }\r\n                      onKeyDown={preventNumberInput}\r\n                    />\r\n                    <p css={inputLabel(!!values.recipient_last_name)}>\r\n                      Прізвище\r\n                    </p>\r\n                    <ErrorMessage name=\"recipient_last_name\">\r\n                      {(msg) => <div css={errorStyle}>{msg}</div>}\r\n                    </ErrorMessage>\r\n                  </label>\r\n\r\n                  <label htmlFor=\"recipient_phone\">\r\n                    <Field name=\"recipient_phone\">\r\n                      {(props: FieldProps<string>) => (\r\n                        <input\r\n                          {...props.field}\r\n                          type=\"tel\"\r\n                          placeholder=\"Номер телефону\"\r\n                          onFocus={() => {\r\n                            setFieldTouched(\"recipient_phone\", false, false);\r\n                            if (!props.field.value) {\r\n                              setFieldValue(\"recipient_phone\", \"+380\");\r\n                            }\r\n                          }}\r\n                          onChange={(e) => {\r\n                            const value = e.target.value;\r\n                            if (value.match(/^\\+380\\d{0,9}$/)) {\r\n                              setFieldValue(\"recipient_phone\", value);\r\n                            }\r\n                          }}\r\n                          onBlur={() => {\r\n                            if (props.field.value === \"+380\") {\r\n                              setFieldValue(\"recipient_phone\", \"\");\r\n                            }\r\n                          }}\r\n                          css={[\r\n                            inputStyle,\r\n                            errorBorder(\r\n                              !!(\r\n                                errors.recipient_phone &&\r\n                                touched.recipient_phone\r\n                              )\r\n                            ),\r\n                          ]}\r\n                        />\r\n                      )}\r\n                    </Field>\r\n                    <p css={inputLabel(!!values.recipient_phone)}>\r\n                      Номер телефону\r\n                    </p>\r\n                    <ErrorMessage name=\"recipient_phone\">\r\n                      {(msg) => <div css={errorStyle}>{msg}</div>}\r\n                    </ErrorMessage>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div role=\"group\" aria-labelledby=\"paymenyLabel\" css={groupWrapper}>\r\n              <h3>Оплата</h3>\r\n              <div css={paymentMethods}>\r\n                <Field\r\n                  type=\"radio\"\r\n                  name=\"payment_method\"\r\n                  value=\"LiqPay\"\r\n                  id=\"LiqPay\"\r\n                />\r\n                <label htmlFor=\"LiqPay\">\r\n                  LiqPay - моментальні платежі по всьому світу\r\n                </label>\r\n                <Field\r\n                  type=\"radio\"\r\n                  name=\"payment_method\"\r\n                  value=\"Накладний платіж\"\r\n                  id=\"deliveryPayment\"\r\n                />\r\n                <label htmlFor=\"deliveryPayment\">\r\n                  Оплата при отриманні замовлення\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default CartForm;\r\n","import { useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport { useAppSelector } from \"../../redux/hooks\";\r\n\r\nimport HeroSection from \"@components/HeroSection/HeroSection\";\r\nimport { selectCart } from \"../../redux/cart/selectors\";\r\n\r\nimport {\r\n  H2,\r\n  ItemContainer,\r\n  MainContainer,\r\n  MainInfoContainer,\r\n  sectionCart,\r\n  TitleContainer,\r\n  Wrapper,\r\n} from \"./OrderPage.styled\";\r\n\r\nimport { containerStyles } from \"@styles/variables\";\r\n\r\nimport CartForm from \"@components/CartForm\";\r\n\r\nimport CartItemCard from \"@components/CartItemCard\";\r\nimport PaymentBlock from \"@components/PaymentBlock\";\r\n\r\nconst CartPage = () => {\r\n  const [callMeBack, setCallMeBack] = useState(false);\r\n\r\n  const cart = useAppSelector(selectCart);\r\n\r\n  const totalPrice = cart.reduce((acc, item) => {\r\n    return acc + item.total_cost;\r\n  }, 0);\r\n\r\n  return (\r\n    <>\r\n      <HeroSection viewType={\"other\"} isEmpty={cart.length === 0}>\r\n        Замовлення\r\n      </HeroSection>\r\n      <section css={sectionCart}>\r\n        <div css={containerStyles}>\r\n          <MainContainer>\r\n            <MainInfoContainer>\r\n              <ItemContainer>\r\n                <TitleContainer>\r\n                  <H2>Ваше замовлення</H2>\r\n                </TitleContainer>\r\n                <Wrapper>\r\n                  {cart.map((item) => (\r\n                    <CartItemCard key={nanoid()} item={item} isOrderPage />\r\n                  ))}\r\n                </Wrapper>\r\n              </ItemContainer>\r\n              <CartForm\r\n                addedItems={cart}\r\n                total_amount={totalPrice}\r\n                callMeBack={callMeBack}\r\n              />\r\n            </MainInfoContainer>\r\n\r\n            <PaymentBlock setCallMeBack={setCallMeBack} isOrderPage />\r\n          </MainContainer>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n"],"names":["sectionCart","css","TitleContainer","styled","onTablet","H2","onDesktop","MainContainer","MainInfoContainer","ItemContainer","Wrapper","orderItemsConverter","addedItems","item","color","count","product_id","size","discount","price","fullPrice","selectContainer","inputWrapper","listStyle","NewPostSelect","formik","setFieldValue","setFieldTouched","touched","errors","values","isShowSelectCities","setIsShowSelectCities","useState","selectedCity","setSelectedCity","searchCity","setSearchCity","cities","setCities","highlightedCityIndex","setHighlightedCityIndex","isShowSelectWarehouse","setIsShowSelectWarehouse","selectedWarehouse","setSelectedWarehouse","searchWarehouse","setSearchWarehouse","warehouses","setWarehouses","highlightedWarehouseIndex","setHighlightedWarehouseIndex","cityListRef","useRef","warehouseListRef","handleSearchValue","e","type","value","onSelectCity","onSelectWarehouse","useEffect","isCyrillicCityName","getNPCities","cityRef","getWarehouses","handleClick","element","filteredWarehouses","warehouse","handleKeyDown","prev","highlightedElement","jsxs","Fragment","jsx","inputStyle","errorBorder","inputLabel","city","index","nanoid","Description","validationSchema","isOtherRecipient","Yup.object","Yup.string","delivery_type","initialValue","CartForm","callMeBack","setIsOtherRecipient","navigate","useNavigate","handleRecipient","preventNumberInput","onOrderSubmit","newOrder","replaceNullsWithEmptyStrings","resp","makeOrder","makePayment","error","Formik","Form","formWrapper","groupWrapper","Field","ErrorMessage","msg","errorStyle","props","deliveryTypes","NPDeliveryWrapper","recipientStyle","paymentMethods","CartPage","setCallMeBack","cart","useAppSelector","selectCart","totalPrice","acc","HeroSection","containerStyles","CartItemCard","PaymentBlock"],"mappings":"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"}