{"version":3,"file":"OrdersPage-B2ZBjNlF.js","sources":["../../src/pages/OrdersPage/OrdersPage.styled.ts","../../src/components/DeleteOrderWarningModal/DeleteOrderWarningModal.styled.ts","../../src/components/DeleteOrderWarningModal/DeleteOrderWarningModal.tsx","../../src/components/OrderItem/OrderItem.styled.ts","../../src/components/OrderItem/OrderItem.tsx","../../src/pages/OrdersPage/OrdersPage.tsx"],"sourcesContent":["import { css } from \"@emotion/react\";\r\n\r\nexport const tableStyles = css`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  & th,\r\n  td {\r\n    text-align: left;\r\n    transition: transform 0.3s ease;\r\n  }\r\n  & th:nth-of-type(9),\r\n  & th:last-child {\r\n    text-align: center;\r\n  }\r\n\r\n  & td:nth-of-type(9) {\r\n    text-align: center;\r\n    height: 24px;\r\n    cursor: pointer;\r\n  }\r\n  & td:nth-of-type(9):hover {\r\n    transform: scale(1.4);\r\n  }\r\n  & td:last-child {\r\n    display: flex;\r\n    justify-content: center;\r\n    height: 24px;\r\n    align-items: center;\r\n    cursor: pointer;\r\n  }\r\n  & td:last-child:hover {\r\n    transform: scale(1.4);\r\n  }\r\n  & td:nth-of-type(7),\r\n  & td:nth-of-type(8) {\r\n    overflow: visible;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport const theadStyles = css`\r\n  width: 1284px;\r\n  height: 30px;\r\n  display: block;\r\n`;\r\nexport const trHeadsStyles = css`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-bottom: 1px solid white;\r\n  display: block;\r\n`;\r\nexport const thHeadsStyles = css`\r\n  width: 127px;\r\n  height: 24px;\r\n  overflow: hidden;\r\n  color: var(--White, #d7d7d7);\r\n  font-variant-numeric: stacked-fractions ordinal;\r\n  font-feature-settings: \"case\" on, \"rvrn\" on, \"hist\" on;\r\n  text-overflow: ellipsis;\r\n  font-family: Arial;\r\n  font-size: var(--Typography-sm, 14px);\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 24px;\r\n  letter-spacing: 0.25px;\r\n`;\r\nexport const tbodyStyles = css`\r\n  display: block;\r\n  margin-top: 10px;\r\n`;\r\nexport const trtbodyStyles = css``;\r\nexport const tdArrow = css`\r\n  font-size: 16px;\r\n  color: var(--White, #d7d7d7);\r\n`;\r\nexport const tdTrash = css`\r\n  display: unset;\r\n  font-size: 16px;\r\n  color: var(--White, #d7d7d7);\r\n`;\r\n","import { css } from \"@emotion/react\";\r\n\r\nexport const wrapper = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-top: 40px;\r\n  color: var(--text-light-grey);\r\n\r\n  & h2 {\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    line-height: 120%;\r\n    letter-spacing: 0.48px;\r\n    margin-bottom: 30px;\r\n    text-align: center;\r\n  }\r\n\r\n  & p {\r\n    text-align: center;\r\n    font-size: 18px;\r\n    font-weight: 400;\r\n    line-height: 22px;\r\n    letter-spacing: 0.44px;\r\n  }\r\n\r\n  & p:first-of-type {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  & p:last-of-type {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  & span {\r\n    margin-bottom: auto;\r\n    font-family: Arial;\r\n    font-size: 22px;\r\n    letter-spacing: 0.44px;\r\n    color: var(--edit-color);\r\n  }\r\n`;\r\n\r\nexport const buttonStyle = css`\r\n  width: 100%;\r\n  padding: 12px 16px;\r\n  border-radius: 24px;\r\n  border: 1px solid var(--bg-btn-grey);\r\n\r\n  font-size: var(--Typography-sm, 14px);\r\n  font-weight: 600;\r\n  line-height: 1;\r\n  letter-spacing: 0.1px;\r\n  color: var(--text-black);\r\n\r\n  background-color: var(--bg-btn-grey);\r\n`;\r\n","import React from \"react\";\r\nimport { buttonStyle, wrapper } from \"./DeleteOrderWarningModal.styled\";\r\n\r\ninterface DeleteOrderWarningModalProps {\r\n  id: number | null;\r\n  deleteOrder: (id: number) => void;\r\n}\r\n\r\nconst DeleteOrderWarningModal: React.FC<DeleteOrderWarningModalProps> = ({\r\n  id,\r\n  deleteOrder,\r\n}) => {\r\n  return (\r\n    <div css={wrapper}>\r\n      <h2>Ви збираєтесь видалити замовлення!</h2>\r\n\r\n      <p>Підтвердіть видалиння замовлення номер:</p>\r\n      <span>{id}</span>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => deleteOrder(Number(id))}\r\n        css={buttonStyle}\r\n      >\r\n        Підтвердіть\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteOrderWarningModal;\r\n","import { css } from \"@emotion/react\";\r\n\r\nexport const orderStatusStyles = (colorStyle: string) => css`\r\n  background-color: ${colorStyle};\r\n  &:hover {\r\n    background-color: ${colorStyle ? colorStyle : \"#393737\"};\r\n  }\r\n`;\r\n","import React, { SetStateAction, useEffect, useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { FaArrowRightLong } from \"react-icons/fa6\";\r\nimport { MdDeleteOutline } from \"react-icons/md\";\r\n\r\nimport {\r\n  tdArrow,\r\n  tdTrash,\r\n  thHeadsStyles,\r\n} from \"@pages/OrdersPage/OrdersPage.styled\";\r\n\r\nimport {\r\n  getProductById,\r\n  updateProductCountIncrease,\r\n} from \"@services/servicesApi\";\r\n\r\nimport { IOrder, IOrderItem } from \"Interfaces/IOrder\";\r\nimport { Product } from \"Interfaces/Product\";\r\nimport { formatDate } from \"@utils/formatDate\";\r\n\r\nimport DeleteOrderWarningModal from \"@components/DeleteOrderWarningModal/DeleteOrderWarningModal\";\r\nimport Modal from \"@components/Modal\";\r\nimport SortingItems from \"@components/SortingItems/SortingItems\";\r\nimport StatusWarningModal from \"@components/StatusWarningModal/StatusWarningModal\";\r\nimport { updateStatus } from \"@utils/updateStatus\";\r\nimport { orderStatusStyles } from \"./OrderItem.styled\";\r\n\r\ninterface IOrderItemProps {\r\n  item: IOrder;\r\n  setIsUpsateStatusOrder: React.Dispatch<SetStateAction<boolean>>;\r\n  onDelete: (id: number) => void;\r\n}\r\nconst modalPortal = document.querySelector(\"#portal-root\");\r\n\r\nconst OrderItem: React.FC<IOrderItemProps> = ({\r\n  item,\r\n  onDelete,\r\n  setIsUpsateStatusOrder,\r\n}) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [isChangeStatusModalOpen, setIsChangeStatusModalOpen] = useState(false);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [paymentStatus, setPaymentStatus] = useState<string | null>(null);\r\n  const [status, setStatus] = useState<string | null>(null);\r\n  const [disableOrder, setDisableOrder] = useState<boolean>(false);\r\n\r\n  const getVariation_ids = (orderProducts: Product[]) =>\r\n    orderProducts.flatMap((product) => {\r\n      const orderItem = item.order_items.find(\r\n        (orderItem: IOrderItem) => orderItem.product_id === product.id\r\n      );\r\n\r\n      if (orderItem) {\r\n        const variations = product.variations.filter((variation) => {\r\n          const sizeMatch = orderItem.size\r\n            ? String(variation.size) === String(orderItem.size)\r\n            : true;\r\n          const colorMatch = orderItem.color\r\n            ? String(variation.color).toLowerCase() ===\r\n              String(orderItem.color).toLowerCase()\r\n            : true;\r\n\r\n          return sizeMatch && colorMatch;\r\n        });\r\n\r\n        return variations.map((variation) => {\r\n          return { id: variation.id, count: orderItem.count };\r\n        });\r\n      } else {\r\n        return [];\r\n      }\r\n    });\r\n\r\n  const product_ids = item.id\r\n    ? item.order_items.map((orderItem) => orderItem.product_id)\r\n    : [];\r\n\r\n  const variation_ids = async () => {\r\n    const result = await Promise.all(\r\n      product_ids.map((productId) => getProductById(productId))\r\n    );\r\n\r\n    return getVariation_ids(result);\r\n  };\r\n\r\n  const IncreaseCountProduct = async (id: number, count: number) => {\r\n    await updateProductCountIncrease(id, count);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (item.status === \"Відхилено\") {\r\n      setDisableOrder(true);\r\n    }\r\n  }, [item.status]);\r\n\r\n  const handleUpdateStatus = async (id: number) => {\r\n    if (id && isChangeStatusModalOpen) {\r\n      setDisableOrder(true);\r\n      await updateStatus(id, \"Відхилено\");\r\n      const result_varition_ids = await variation_ids();\r\n      if (result_varition_ids.length > 0) {\r\n        result_varition_ids.forEach((item) => {\r\n      setIsUpsateStatusOrder((prev) => !prev);\r\n          IncreaseCountProduct(item.id, item.count);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePageRedirects = (id: number) => {\r\n    if (id && !disableOrder) {\r\n      navigate(`/admin/orders/${id}`);\r\n    } else if (id && disableOrder && item.status === \"Відправлено\") {\r\n      navigate(`/admin/orders/${id}`);\r\n    }\r\n  };\r\n\r\n  const optionsPayment =\r\n    item.payment_status === \"Сплачено\"\r\n      ? [\"Сплачено\"]\r\n      : [\"В очікуванні\", \"Сплачено\"];\r\n\r\n  const optionStatus =\r\n    item.status === \"Відправлено\"\r\n      ? [\"Відправлено\"]\r\n      : item.status === \"Відхилено\"\r\n      ? [\"Відхилено\"]\r\n      : [\"В очікуванні\", \"Відправлено\", \"Відхилено\"];\r\n\r\n  const colorStatus =\r\n    item.payment_status === \"Сплачено\" && item.status === \"Відправлено\"\r\n      ? \"#154214\"\r\n      : item.status === \"Відхилено\"\r\n      ? \"#5a2323\"\r\n      : \"\";\r\n\r\n  return (\r\n    <tr key={item.id} css={orderStatusStyles(colorStatus)}>\r\n      <td css={thHeadsStyles}>{item.id}</td>\r\n      <td css={thHeadsStyles}>{formatDate(item.order_date)}</td>\r\n      <td css={thHeadsStyles}>{item.name}</td>\r\n      <td css={thHeadsStyles}>{item.phone}</td>\r\n      <td css={thHeadsStyles}>{item.total_amount}</td>\r\n      <td css={thHeadsStyles}>{item.payment_method}</td>\r\n      <td css={thHeadsStyles}>\r\n        {\" \"}\r\n        <SortingItems<string>\r\n          idOrders={item.id}\r\n          options={optionsPayment}\r\n          width={\"127px\"}\r\n          widthTagP={\"50%\"}\r\n          widthContainer={\"110px\"}\r\n          height={\"auto\"}\r\n          border={\"unset\"}\r\n          padding={\"unset\"}\r\n          borderRadius={\"12px\"}\r\n          justifyContent={\"center\"}\r\n          backGround={\"var(--bg-light-grey)\"}\r\n          color={\"var(--text-black)\"}\r\n          fontSize={\"12px\"}\r\n          top={\"30px\"}\r\n          gap={\"8px\"}\r\n          setSelectedOption={setPaymentStatus}\r\n          selectedOption={paymentStatus}\r\n          disable={\r\n            paymentStatus === \"Сплачено\" || status === \"Відхилено\"\r\n              ? true\r\n              : disableOrder\r\n          }\r\n        />\r\n      </td>\r\n      <td css={thHeadsStyles}>\r\n        <SortingItems<string>\r\n          idOrders={item.id}\r\n          options={optionStatus}\r\n          width={\"127px\"}\r\n          widthTagP={\"50%\"}\r\n          widthContainer={\"110px\"}\r\n          height={\"auto\"}\r\n          border={\"unset\"}\r\n          padding={\"unset\"}\r\n          borderRadius={\"12px\"}\r\n          backGround={\"var(--bg-light-grey)\"}\r\n          color={\"var(--text-black)\"}\r\n          justifyContent={\"center\"}\r\n          fontSize={\"12px\"}\r\n          top={\"30px\"}\r\n          gap={\"8px\"}\r\n          disable={status === \"Відправлено\" ? true : disableOrder}\r\n          setIsOpenModal={setIsChangeStatusModalOpen}\r\n          setSelectedOption={setStatus}\r\n          selectedOption={status}\r\n        />\r\n      </td>\r\n      <td onClick={() => setIsDeleteModalOpen(true)} css={thHeadsStyles}>\r\n        <MdDeleteOutline css={tdTrash} />\r\n      </td>\r\n      <td\r\n        onClick={() => handlePageRedirects(Number(item.id))}\r\n        css={thHeadsStyles}\r\n      >\r\n        <FaArrowRightLong css={tdArrow} />\r\n      </td>\r\n      {isChangeStatusModalOpen &&\r\n        modalPortal &&\r\n        createPortal(\r\n          <Modal setIsOpen={setIsChangeStatusModalOpen}>\r\n            {status === \"Відхилено\" && (\r\n              <StatusWarningModal\r\n                updateStatus={() => handleUpdateStatus(Number(item.id))}\r\n                name={item.id ? Number(item.id) : null}\r\n                setIsOpen={setIsChangeStatusModalOpen}\r\n              />\r\n            )}\r\n          </Modal>,\r\n          modalPortal\r\n        )}\r\n      {isDeleteModalOpen &&\r\n        modalPortal &&\r\n        createPortal(\r\n          <Modal setIsOpen={setIsDeleteModalOpen}>\r\n            <DeleteOrderWarningModal\r\n              id={item.id ? Number(item.id) : null}\r\n              deleteOrder={onDelete}\r\n            />\r\n          </Modal>,\r\n          modalPortal\r\n        )}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n","import { containerStyles } from \"@styles/variables\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { deleteOrder, getOrders } from \"@services/servicesApi\";\r\nimport { IOrder } from \"Interfaces/IOrder\";\r\nimport {\r\n  tableStyles,\r\n  tbodyStyles,\r\n  theadStyles,\r\n  thHeadsStyles,\r\n  trHeadsStyles,\r\n} from \"./OrdersPage.styled\";\r\nimport OrderItem from \"@components/OrderItem/OrderItem\";\r\nimport { nanoid } from \"nanoid\";\r\nimport SortingItems from \"@components/SortingItems/SortingItems\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport Pagination from \"@components/Pagination/Pagination\";\r\nimport { useCheckTokenExpiration } from \"@hooks/useCheckTokenExpiration\";\r\n\r\nconst OrdersPage = () => {\r\n  const checkExpiration = useCheckTokenExpiration();\r\n  const [data, setData] = useState<IOrder[]>([]);\r\n  const [typeOfSort, setTypeOfSort] = useState<string | null>(null);\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const [totalPage, setTotalPage] = useState<number>(0);\r\n\r\n  const params = useMemo(\r\n    () => Object.fromEntries([...searchParams]),\r\n    [searchParams]\r\n  );\r\n  const { sortOrder = \"DESC\", page } = params;\r\n\r\n  const [currentPage, setCurrentPage] = useState(Number(page || 1));\r\n  const [isDeleted, setIsDeleted] = useState(false);\r\n  const [isUpsateStatusOrder, setIsUpsateStatusOrder] = useState(false);\r\n  const countItemPages = 20;\r\n  const lastPage = totalPage && Math.ceil(totalPage / countItemPages);\r\n\r\n  const updateSearchParams = useCallback(\r\n    (newParams: Record<string, string | string[]>) => {\r\n      setSearchParams((prevParams) => {\r\n        const updatedParams = new URLSearchParams(prevParams);\r\n        Object.keys(newParams).forEach((key) => updatedParams.delete(key));\r\n        Object.entries(newParams).forEach(([key, value]) => {\r\n          if (Array.isArray(value)) {\r\n            value.forEach((val) => updatedParams.append(key, val));\r\n          } else if (value !== \"\") {\r\n            updatedParams.set(key, value);\r\n          }\r\n        });\r\n        return updatedParams;\r\n      });\r\n    },\r\n    [setSearchParams]\r\n  );\r\n\r\n  const handleDeleteOrder = async (id: number) => {\r\n    try {\r\n      await deleteOrder(id);\r\n      setIsDeleted((prev) => !prev);\r\n    } catch (error) {\r\n      console.log(\"error :>> \", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortOrder = \"ASC\";\r\n\r\n    switch (typeOfSort) {\r\n      case \"Дата: від новіших до старіших\":\r\n        sortOrder = \"DESC\";\r\n        break;\r\n      case \"Дата: від старіших до новіших\":\r\n        sortOrder = \"ASC\";\r\n        break;\r\n      default:\r\n        sortOrder = \"ASC\";\r\n        break;\r\n    }\r\n    updateSearchParams({ sortOrder, page: currentPage.toString() });\r\n  }, [typeOfSort, currentPage, updateSearchParams]);\r\n\r\n  useEffect(() => {\r\n    checkExpiration();\r\n    const newSearchParams = {\r\n      ...params,\r\n      sortOrder: sortOrder,\r\n      page: currentPage.toString(),\r\n    };\r\n\r\n    const nonEmptyParams = Object.entries(newSearchParams).reduce(\r\n      (acc, [key, value]) => {\r\n        if (Array.isArray(value)) {\r\n          const filteredValue = value.filter((v) => v !== \"\");\r\n          acc[key] = filteredValue;\r\n        } else if (value !== undefined && value !== \"\") {\r\n          acc[key] = value;\r\n        }\r\n        return acc;\r\n      },\r\n      {} as Record<string, string | string[]>\r\n    );\r\n\r\n    updateSearchParams(nonEmptyParams);\r\n\r\n    const searchParamsString = new URLSearchParams();\r\n\r\n    Object.entries(nonEmptyParams).forEach(([key, value]) => {\r\n      if (Array.isArray(value)) {\r\n        value.forEach((val) => {\r\n          if (val !== \"\") {\r\n            searchParamsString.append(key, val);\r\n          }\r\n        });\r\n      } else if (value !== \"\") {\r\n        searchParamsString.append(key, value);\r\n      }\r\n    });\r\n\r\n    async function fetchOrders() {\r\n      try {\r\n        const result = await getOrders(searchParamsString.toString());\r\n        setTotalPage(Number(result.totalOrders));\r\n        setData(result.data);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch products:\", error);\r\n      }\r\n    }\r\n    fetchOrders();\r\n  }, [\r\n    currentPage,\r\n    sortOrder,\r\n    params,\r\n    updateSearchParams,\r\n    isDeleted,\r\n    isUpsateStatusOrder,\r\n  ]);\r\n\r\n  const options = [\r\n    \"Дата: від новіших до старіших\",\r\n    \"Дата: від старіших до новіших\",\r\n  ];\r\n\r\n  const firstPageBtn = () => setCurrentPage(1);\r\n  const lastPageBtn = () => setCurrentPage(lastPage);\r\n  const paginate = (page: number) => setCurrentPage(page);\r\n  const nextPage = () =>\r\n    setCurrentPage((prev) => {\r\n      if (prev === lastPage) {\r\n        return prev;\r\n      }\r\n      return prev + 1;\r\n    });\r\n  const prevPage = () =>\r\n    setCurrentPage((prev) => {\r\n      if (prev === 1) {\r\n        return prev;\r\n      }\r\n      return prev - 1;\r\n    });\r\n\r\n  return (\r\n    <section style={{ width: \"100vw\", paddingTop: \"100px\" }}>\r\n      <div css={containerStyles}>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        >\r\n          <h1 style={{ color: \"white\", fontSize: \"25px\" }}>Всі замовлення</h1>\r\n\r\n          <div style={{ width: \"265px\" }}>\r\n            <SortingItems<string>\r\n              options={options}\r\n              width={\"285px\"}\r\n              setSelectedOption={setTypeOfSort}\r\n              selectedOption={typeOfSort}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <table css={tableStyles}>\r\n          <thead css={theadStyles}>\r\n            <tr css={trHeadsStyles}>\r\n              <th css={thHeadsStyles}>Номер</th>\r\n              <th css={thHeadsStyles}>Дата</th>\r\n              <th css={thHeadsStyles}>Ім'я</th>\r\n              <th css={thHeadsStyles}>Телефон</th>\r\n              <th css={thHeadsStyles}>Сумма</th>\r\n              <th css={thHeadsStyles}>Тип оплати</th>\r\n              <th css={thHeadsStyles}>Оплата</th>\r\n              <th css={thHeadsStyles}>Статус</th>\r\n              <th css={thHeadsStyles}>Видалити</th>\r\n              <th css={thHeadsStyles}>Детальніше</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody css={tbodyStyles}>\r\n            {data &&\r\n              data.map((item) => (\r\n                <OrderItem\r\n                  item={item}\r\n                  key={nanoid()}\r\n                  onDelete={handleDeleteOrder}\r\n                  setIsUpsateStatusOrder={setIsUpsateStatusOrder}\r\n                />\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {totalPage > 10 && (\r\n        <Pagination\r\n          totalPage={totalPage}\r\n          countItemPages={countItemPages}\r\n          paginate={paginate}\r\n          nextPage={nextPage}\r\n          prevPage={prevPage}\r\n          firstPageBtn={firstPageBtn}\r\n          lastPageBtn={lastPageBtn}\r\n          currentPage={currentPage}\r\n          lastPage={lastPage}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrdersPage;\r\n"],"names":["tableStyles","css","theadStyles","trHeadsStyles","thHeadsStyles","tbodyStyles","tdArrow","tdTrash","wrapper","buttonStyle","DeleteOrderWarningModal","id","deleteOrder","jsxs","jsx","orderStatusStyles","colorStyle","modalPortal","OrderItem","item","onDelete","setIsUpsateStatusOrder","navigate","useNavigate","isChangeStatusModalOpen","setIsChangeStatusModalOpen","useState","isDeleteModalOpen","setIsDeleteModalOpen","paymentStatus","setPaymentStatus","status","setStatus","disableOrder","setDisableOrder","getVariation_ids","orderProducts","product","orderItem","variation","sizeMatch","colorMatch","product_ids","variation_ids","result","productId","getProductById","IncreaseCountProduct","count","updateProductCountIncrease","useEffect","handleUpdateStatus","updateStatus","result_varition_ids","prev","handlePageRedirects","optionsPayment","optionStatus","colorStatus","formatDate","SortingItems","MdDeleteOutline","FaArrowRightLong","createPortal","Modal","StatusWarningModal","OrdersPage","checkExpiration","useCheckTokenExpiration","data","setData","typeOfSort","setTypeOfSort","searchParams","setSearchParams","useSearchParams","totalPage","setTotalPage","params","useMemo","sortOrder","page","currentPage","setCurrentPage","isDeleted","setIsDeleted","isUpsateStatusOrder","countItemPages","lastPage","updateSearchParams","useCallback","newParams","prevParams","updatedParams","key","value","val","handleDeleteOrder","error","newSearchParams","nonEmptyParams","acc","filteredValue","v","searchParamsString","fetchOrders","getOrders","options","firstPageBtn","lastPageBtn","paginate","nextPage","prevPage","containerStyles","nanoid","Pagination"],"mappings":"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"}